# Generated by Django 5.1.7 on 2025-03-26 03:56

import core.models.customizations.mixins
import django.db.models.deletion
import django.db.models.functions.text
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('order', models.SmallIntegerField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Workspace priority',
                'verbose_name_plural': 'Workspace priorities',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='core.category')),
            ],
            options={
                'verbose_name': 'workspace category',
                'verbose_name_plural': 'workspace categories',
            },
            bases=(core.models.customizations.mixins.TreeMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default', max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(max_length=300)),
            ],
            options={
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('name'), models.F('created_by'), name='unique_lower_workspace_owner_name')],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='core.workspace')),
            ],
            options={
                'verbose_name': 'workspace tag',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('order', models.SmallIntegerField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='core.workspace')),
            ],
            options={
                'verbose_name': 'Workspace status',
                'verbose_name_plural': 'Workspace statuses',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=200)),
                ('detail', models.TextField(blank=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('estimated_start_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_effort', models.PositiveSmallIntegerField(blank=True, help_text='in days', null=True)),
                ('actual_effort', models.PositiveSmallIntegerField(blank=True, help_text='in days', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='core.project')),
                ('priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='core.priority')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.status')),
                ('tags', models.ManyToManyField(blank=True, related_name='projects', to='core.tag')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.workspace')),
            ],
            bases=(core.models.customizations.mixins.TreeMixin, models.Model),
        ),
        migrations.AddField(
            model_name='priority',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priorities', to='core.workspace'),
        ),
        migrations.AddField(
            model_name='category',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='core.workspace'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=240)),
                ('detail', models.TextField(blank=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('estimated_start_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_end_date', models.DateTimeField(blank=True, null=True)),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_effort', models.PositiveSmallIntegerField(blank=True, help_text='in days', null=True)),
                ('actual_effort', models.PositiveSmallIntegerField(blank=True, help_text='in days', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='core.task')),
                ('priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='core.priority')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.project')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.status')),
                ('tags', models.ManyToManyField(blank=True, related_name='tasks', to='core.tag')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.workspace')),
            ],
            options={
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('title'), models.F('workspace'), models.F('category'), models.F('project'), name='unique_lower_workspace_category_project')],
            },
            bases=(core.models.customizations.mixins.TreeMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), models.F('workspace'), name='unique_lower_tag_name_workspace'),
        ),
        migrations.AddConstraint(
            model_name='status',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), models.F('workspace'), name='unique_lower_status_name_workspace'),
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('title'), models.F('workspace'), models.F('category'), name='unique_lower_project_title_category_workspace'),
        ),
        migrations.AddConstraint(
            model_name='priority',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), models.F('workspace'), name='unique_lower_priority_name_workspace'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), models.F('workspace'), name='unique_lower_category_name_workspace'),
        ),
    ]
